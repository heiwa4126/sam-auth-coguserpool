AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  sam-auth-coguserpool

  Sample SAM Template for sam-auth-coguserpool

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
  Api:
    OpenApiVersion: 3.0.3

Resources:
  ApiGw:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
      Auth:
        DefaultAuthorizer: CognitoAuthorizer1
        Authorizers:
          CognitoAuthorizer1:
            UserPoolArn: !GetAtt UserPool1.Arn
      #       # AuthorizationScopes:
      #       #   - default.delete
      #       #   - default.update
      #       #   - default.write
      #       #   - default.read

  HelloFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: src/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGw
            Path: /hello
            Method: get

  HelloFunctionLogGroup:
    Type: AWS::Logs::LogGroup
    DependsOn: HelloFunction
    Properties:
      RetentionInDays: 7
      LogGroupName: !Sub "/aws/lambda/${HelloFunction}"

  UserPool1:
    Type: AWS::Cognito::UserPool
    Properties:
      # UserPoolName: !Sub "${Env}-${SystemName}-UserPool"
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: given_name
          Required: true
        - AttributeDataType: String
          Name: family_name
          Required: true
      AccountRecoverySetting:
        RecoveryMechanisms:
          - Priority: 1
            Name: verified_email
      Policies:
        PasswordPolicy:
          MinimumLength: 8
          RequireLowercase: false
          RequireNumbers: false
          RequireSymbols: false
          RequireUppercase: false
          TemporaryPasswordValidityDays: 7
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: false

  UserPoolClient1:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool1
      # ClientName: app1
      GenerateSecret: false
      ExplicitAuthFlows:
        - ALLOW_ADMIN_USER_PASSWORD_AUTH
        - ALLOW_REFRESH_TOKEN_AUTH
        - ALLOW_USER_SRP_AUTH

Outputs:
  HelloApi:
    Description: "API Gateway endpoint URL for Prod stage for Hello function"
    Value: !Sub "https://${ApiGw}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  # UserPoolName:
  #   Value: !Ref UserPool1
  ClientId:
    Value: !Ref UserPoolClient1
